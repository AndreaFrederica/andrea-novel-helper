name: build-vsix (npm only)

on:
  workflow_dispatch:
    inputs:
      electron_version:
        description: "VS Code 的 Electron 版本（如 30.0.9）"
        required: true
        default: "30.0.9"
      publish:
        description: "打完是否立即发布到 Marketplace（需要 VSCE_PAT）"
        type: boolean
        required: true
        default: false
      prerelease:
        description: "作为预发布版本发布（仅在 publish=true 时生效）"
        type: boolean
        required: true
        default: false

jobs:
  build:
    name: Build ${{ matrix.target }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: win32-x64
          - os: ubuntu-latest
            target: linux-x64
          - os: macos-latest
            target: darwin-arm64
          - os: macos-latest
            target: darwin-x64
    runs-on: ${{ matrix.os }}
    env:
      ELECTRON_VERSION: ${{ inputs.electron_version }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps (npm)
        run: npm ci

      # 为 VS Code 的 Electron 版本重建原生依赖（@vscode/sqlite3）
      - name: Rebuild native deps for Electron
        run: npm rebuild @vscode/sqlite3 --runtime=electron --target=${{ env.ELECTRON_VERSION }}

      # 打包 VSIX（vsce 会自动调用 `npm run vscode:prepublish` 如果你在 package.json 里定义了）
      - name: Package VSIX
        run: npx vsce package --target ${{ matrix.target }} --out dist/anh-${{ matrix.target }}.vsix

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}.vsix
          path: dist/*.vsix

  publish:
    name: Publish to Marketplace
    needs: build
    if: ${{ inputs.publish == true }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: "*.vsix"
          merge-multiple: true

      - run: npm i -g @vscode/vsce

      - name: Publish all VSIX
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          set -e
          for f in *.vsix; do
            if [ "${{ inputs.prerelease }}" = "true" ]; then
              echo "Publishing (pre-release) $f"
              vsce publish --packagePath "$f" --pre-release
            else
              echo "Publishing $f"
              vsce publish --packagePath "$f"
            fi
          done
